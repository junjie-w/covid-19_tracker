{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Junkie Wu/Documents/Projects_practice/7_covid-19_tracker-react-firebase/covid-19_tracker-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Junkie Wu/Documents/Projects_practice/7_covid-19_tracker-react-firebase/covid-19_tracker-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Junkie Wu/Documents/Projects_practice/7_covid-19_tracker-react-firebase/covid-19_tracker-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from\"react\";import'./App.css';import{Card,CardContent,FormControl,MenuItem,Select}from\"@material-ui/core\";import{InfoBox}from\"./components/InfoBox\";import{Map}from\"./components/Map\";import{LineGraph}from\"./components/LineGraph\";import{Table}from'./components/Table';import{sortData,prettyPrintStat}from\"./components/util\";import numeral from\"numeral\";import\"leaflet/dist/leaflet.css\";function App(){var _useState=useState(\"worldwide\"),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setInputCountry=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),countryInfo=_useState4[0],setCountryInfo=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),countries=_useState6[0],setCountries=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),mapCountries=_useState8[0],setMapCountries=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),tableData=_useState10[0],setTableData=_useState10[1];var _useState11=useState(\"cases\"),_useState12=_slicedToArray(_useState11,2),casesType=_useState12[0],setCasesType=_useState12[1];var _useState13=useState({lat:34.80746,lng:-40.4796}),_useState14=_slicedToArray(_useState13,2),mapCenter=_useState14[0],setMapCenter=_useState14[1];var _useState15=useState(3),_useState16=_slicedToArray(_useState15,2),mapZoom=_useState16[0],setMapZoom=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){return setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});setCountries(countries);var sortedData=sortData(data);setMapCountries(data);setTableData(sortedData);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);console.log(\"casesType >>>\",casesType);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=e.target.value;url=countryCode===\"worldwide\"?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=4;return fetch(url).then(function(response){return response.json();}).then(function(data){setInputCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"COVID-19 TRACKER\"}),/*#__PURE__*/_jsx(FormControl,{className:\"app__dropdown\",children:/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",value:country,onChange:onCountryChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"worldwide\",children:\"Worldwide\"}),countries.map(function(country){return/*#__PURE__*/_jsx(MenuItem,{value:country.value,children:country.name});})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app__stats\",children:[/*#__PURE__*/_jsx(InfoBox,{onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",isRed:true,active:casesType===\"cases\",cases:prettyPrintStat(countryInfo.todayCases),total:numeral(countryInfo.cases).format(\"0.0a\")}),/*#__PURE__*/_jsx(InfoBox,{onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recovered\",active:casesType===\"recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:numeral(countryInfo.recovered).format(\"0.0a\")}),/*#__PURE__*/_jsx(InfoBox,{onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",isRed:true,active:casesType===\"deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:numeral(countryInfo.deaths).format(\"0.0a\")})]}),/*#__PURE__*/_jsx(Map,{countries:mapCountries,casesType:casesType,center:mapCenter,zoom:mapZoom})]}),/*#__PURE__*/_jsx(Card,{className:\"app__right\",children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app__information\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live Cases by Country\"}),/*#__PURE__*/_jsx(Table,{countries:tableData}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Worldwide new \",casesType]}),/*#__PURE__*/_jsx(LineGraph,{casesType:casesType})]})})})]});}export default App;","map":{"version":3,"sources":["C:/Users/Junkie Wu/Documents/Projects_practice/7_covid-19_tracker-react-firebase/covid-19_tracker-react/src/App.js"],"names":["React","useEffect","useState","Card","CardContent","FormControl","MenuItem","Select","InfoBox","Map","LineGraph","Table","sortData","prettyPrintStat","numeral","App","country","setInputCountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { Card, CardContent, FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport { InfoBox } from \"./components/InfoBox\";\nimport { Map } from \"./components/Map\";\nimport { LineGraph } from \"./components/LineGraph\";\nimport { Table } from './components/Table';\nimport { sortData, prettyPrintStat } from \"./components/util\";\nimport numeral from \"numeral\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => setCountryInfo(data));\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setCountries(countries);\n          let sortedData = sortData(data);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  console.log(\"casesType >>>\", casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}