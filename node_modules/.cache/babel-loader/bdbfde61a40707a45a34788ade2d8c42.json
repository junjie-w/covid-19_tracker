{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Junkie Wu\\\\Documents\\\\Projects_practice\\\\7_covid-19_tracker-react-firebase\\\\covid-19_tracker-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { Card, CardContent, FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport { InfoBox } from \"./components/InfoBox\";\nimport { Map } from \"./components/Map\";\nimport { LineGraph } from \"./components/LineGraph\";\nimport { Table } from './components/Table';\nimport { sortData, prettyPrintStat } from \"./components/util\";\nimport numeral from \"numeral\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  _s();\n\n  const [globalInfo, setGlobalInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\"); //const [mapCenter, setMapCenter] = useState({ lat: 55.3781, lng: -3.4360 });\n\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }); //const [mapCenter, setMapCenter] = useState({ lat: 51.4934, lng: 0.0098 });\n  //const [mapZoom, setMapZoom] = useState(3);\n  //const [mapZoom, setMapZoom] = useState(3.5);\n\n  const [mapZoom, setMapZoom] = useState(2.35); //const [flyTo, setFlyTo] = useState([34.8076, -40.4796], 2.35)\n\n  const [view, setView] = useState((34.8076, -40.4796), 2.35);\n  useEffect(() => {\n    const getGlobalData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => setGlobalInfo(data));\n    };\n\n    getGlobalData();\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n        setMapCountries(data);\n        let sortedData = sortData(data);\n        setTableData(sortedData);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n  console.log(\"casesType >>>\", casesType);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setInputCountry(countryCode);\n      setGlobalInfo(data); //countryCode === \"worldwide\" ? setMapCenter([34.8076, -40.4796]) : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      //setMapCenter(countryCode === \"worldwide\" ? [34.80746, -40.4796] : [data.countryInfo.lat, data.countryInfo.long]) && setMapZoom(countryCode === \"worldwide\" ? 2.35 : 3.5);\n      //countryCode === \"worldwide\" ? setMapZoom(2.35) : setMapZoom(3.5);\n      //setFlyTo(countryCode === \"worldwide\" ? [34.8076, -40.4796] : [data.countryInfo.lat, data.countryInfo.long], countryCode === \"worldwide\" ? 2.35 : 3.5)\n\n      setView(countryCode === \"worldwide\" ? (34.8076, -40.4796) : (data.countryInfo.lat, data.countryInfo.long), countryCode === \"worldwide\" ? 2.35 : 3.5);\n    });\n  };\n\n  console.log(\"GlobalInfo >>>\", globalInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app__title\",\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          isRed: true,\n          active: casesType === \"cases\",\n          cases: prettyPrintStat(globalInfo.todayCases),\n          total: numeral(globalInfo.cases).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\",\n          active: casesType === \"recovered\",\n          cases: prettyPrintStat(globalInfo.todayRecovered),\n          total: numeral(globalInfo.recovered).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          isRed: true,\n          active: casesType === \"deaths\",\n          cases: prettyPrintStat(globalInfo.todayDeaths),\n          total: numeral(globalInfo.deaths).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        casesType: casesType,\n        center: mapCenter,\n        zoom: mapZoom,\n        setView: view\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__information\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"tableTitle\",\n            children: \"Live Cases by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"lineGraphTitle\",\n            children: [\"Worldwide new \", casesType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            casesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LOeQyggLWYwtjyhq0adGBVeTvv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Junkie Wu/Documents/Projects_practice/7_covid-19_tracker-react-firebase/covid-19_tracker-react/src/App.js"],"names":["React","useEffect","useState","Card","CardContent","FormControl","MenuItem","Select","InfoBox","Map","LineGraph","Table","sortData","prettyPrintStat","numeral","App","globalInfo","setGlobalInfo","countries","setCountries","country","setInputCountry","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","view","setView","getGlobalData","fetch","then","response","json","data","getCountriesData","map","name","value","countryInfo","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport { Card, CardContent, FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport { InfoBox } from \"./components/InfoBox\";\nimport { Map } from \"./components/Map\";\nimport { LineGraph } from \"./components/LineGraph\";\nimport { Table } from './components/Table';\nimport { sortData, prettyPrintStat } from \"./components/util\";\nimport numeral from \"numeral\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [globalInfo, setGlobalInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  //const [mapCenter, setMapCenter] = useState({ lat: 55.3781, lng: -3.4360 });\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  //const [mapCenter, setMapCenter] = useState({ lat: 51.4934, lng: 0.0098 });\n  //const [mapZoom, setMapZoom] = useState(3);\n  //const [mapZoom, setMapZoom] = useState(3.5);\n  const [mapZoom, setMapZoom] = useState(2.35);\n  //const [flyTo, setFlyTo] = useState([34.8076, -40.4796], 2.35)\n  const [view, setView] = useState((34.8076, -40.4796), 2.35)\n\n  useEffect(() => {\n    const getGlobalData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/all\")\n        .then(response => response.json())\n        .then(data => setGlobalInfo(data));\n    }\n    getGlobalData();\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map(country => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          setCountries(countries);\n          setMapCountries(data);\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  console.log(\"casesType >>>\", casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setGlobalInfo(data);\n        //countryCode === \"worldwide\" ? setMapCenter([34.8076, -40.4796]) : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        //setMapCenter(countryCode === \"worldwide\" ? [34.80746, -40.4796] : [data.countryInfo.lat, data.countryInfo.long]) && setMapZoom(countryCode === \"worldwide\" ? 2.35 : 3.5);\n        //countryCode === \"worldwide\" ? setMapZoom(2.35) : setMapZoom(3.5);\n        //setFlyTo(countryCode === \"worldwide\" ? [34.8076, -40.4796] : [data.countryInfo.lat, data.countryInfo.long], countryCode === \"worldwide\" ? 2.35 : 3.5)\n        setView(countryCode === \"worldwide\" ? (34.8076, -40.4796) : (data.countryInfo.lat, data.countryInfo.long), countryCode === \"worldwide\" ? 2.35 : 3.5)\n      });\n  };\n\n  console.log(\"GlobalInfo >>>\", globalInfo)\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1 className=\"app__title\">COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={e => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(globalInfo.todayCases)}\n            total={numeral(globalInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={e => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(globalInfo.todayRecovered)}\n            total={numeral(globalInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={e => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(globalInfo.todayDeaths)}\n            total={numeral(globalInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n          setView={view}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3 className=\"tableTitle\">Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3 className=\"lineGraphTitle\">Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}